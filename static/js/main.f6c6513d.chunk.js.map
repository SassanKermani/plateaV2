{"version":3,"sources":["components/Menubar.js","components/Mapview.js","components/Postview.js","App.js","reportWebVitals.js","index.js"],"names":["Menubar","id","onClick","props","changePage","className","type","accept","capture","onChange","postprop","file","document","querySelector","files","reader","FileReader","addEventListener","result","readAsDataURL","formatImg","React","Component","Mapview","center","zoom","scrollWheelZoom","attribution","url","Postview","console","log","this","crds","src","crd","latitude","longitude","postImg","post","require","default","navigator","geolocation","watchPosition","pos","coords","forceUpdate","App","useState","pageselection","setpageselection","undefined","imagetopost","setimagetopost","chnagePage","str","takePicture","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","rel","href","integrity","crossOrigin","getElementById"],"mappings":"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","file":"static/js/main.f6c6513d.chunk.js","sourcesContent":["import React from 'react';\nimport { unstable_batchUpdates } from 'react-dom';\n\nclass Menubar extends React.Component {\n\n\trender() {\n\n\t\tfunction formatImg(postprop) {\n\t\t\tconst file = document.querySelector('input[type=file]').files[0];\n\t\t\tconst reader = new FileReader();\n\n\t\t\treader.addEventListener(\"load\", function () {\n\t\t\t\t// console.log(reader.result);\n\t\t\t\tpostprop(reader.result);\n\n\t\t\t}, false);\n\n\t\t\tif (file) {\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t}\n\t\t}\n\n\t\treturn(\n\t\t\t<div id=\"menueBar\">\n\t\t\t\t<div onClick={()=>{this.props.changePage(`map`)}} className=\"menueBar_iteam\">MAP</div>\n\t\t\t\t{/*<div onClick={()=>{this.props.changePage(`post`)}} className=\"menueBar_iteam\">POST</div>*/}\n\n\t\t\t\t{<div className=\"menueBar_iteam\"><input type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={()=>{ formatImg(this.props.postprop) }} /></div>}\n\t\t\t\t{/*<div className=\"menueBar_iteam\"><input type=\"file\" accept=\"image/*\" capture=\"camera\" onChange={()=>{ if(this.props.crd != false){formatImg(this.props.postprop)} }} /></div>*/}\n\n\t\t\t\t<div onClick={()=>{this.props.changePage(`user`)}} className=\"menueBar_iteam\">USER</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Menubar;","import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\nclass Mapview extends React.Component {\n\n\trender() {\n\n\t\treturn(\n\t\t\t<div id=\"Mapveiw\">\n\t\t\t\t<MapContainer id=\"Mapveiw_Map\" center={[39.972155, -105.164223]} zoom={13} scrollWheelZoom={true}>\n\t\t\t\t\t<TileLayer\n\t\t\t\t\t\tattribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\t/>\n\t\t\t\t</MapContainer>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Mapview;","import React from 'react';\nimport { state } from 'react'\n\nclass Postview extends React.Component {\n\n\trender() {\n\n\t\tfunction postImg(post){\n\t\t\t// console.log(`lat : ${lat}, lng : ${lng}`)\n\t\t\tpost();\n\t\t}\n\n\t\tconsole.log(this.props.crds)\n\n\t\treturn(\n\t\t\t<div id=\"Postview\">\n\t\t\t\t<img id=\"img\" src={this.props.src} />\n\t\t\t\t<div id=\"img_Text\">\n\t\t\t\t\t<p>lat:{this.props.crd.latitude}, lng:{this.props.crd.longitude}</p>\n\t\t\t\t\t<p>Title: <input type=\"text\"></input></p>\n\t\t\t\t\t<p>post:</p>\n\t\t\t\t\t<textarea id=\"img_Text_textarea\"/>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"img_Post_Cancel\">\n\t\t\t\t\t<button>post</button>\n\t\t\t\t\t<button onClick={()=>{postImg(this.props.post)}}>cancel</button>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Postview;\n","import './App.css';\nimport { useState } from 'react'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n\nconst Menubar = require(`./components/Menubar`).default;\nconst Mapview = require(`./components/Mapview`).default;\nconst Postview = require(`./components/Postview`).default;\n\nlet crd = false;\nnavigator.geolocation.watchPosition((pos)=>{\n\tconsole.log(pos);\n\tcrd = pos.coords;\n\tif(crd == false){\n\t\tthis.forceUpdate()\n\t}\n})\n\n\nfunction App() {\n\tconst [pageselection, setpageselection] = useState(`map`)\n\tconst [imagetopost, setimagetopost] = useState(undefined)\n\n\tfunction chnagePage(str){\n\t\tsetpageselection(str);\n\t}\n\n\tfunction takePicture(str){\n\t\tsetimagetopost(str);\n\t}\n\n\tfunction postPicture(){\n\t\tsetimagetopost(undefined);\n\t\tsetpageselection(`map`);\n\t}\n\n\tconsole.log(`pageReload`);\n\n\tswitch(true){\n\t\tcase(imagetopost != undefined && pageselection != `post`):\n\t\t\tconsole.log(`hit imagetopost != undefined`);\n\t\t\tsetpageselection(`post`);\n\n\t\tcase(pageselection == `map`):\n\t\t\treturn(\n\t\t\t\t<div id=\"mainScreenContainer\">\n\t\t\t\t\t<Mapview/>\n\t\t\t\t\t<Menubar crd={crd} postprop={takePicture} changePage={chnagePage}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\tbreak;\n\n\t\tcase(pageselection == `post`):\n\t\t\treturn(\n\t\t\t\t<div id=\"postScreenContainer\">\n\t\t\t\t\t<Postview crd={crd} post={postPicture} src={imagetopost} />\n\t\t\t\t\t{/*<Menubar crd={crd} postprop={takePicture} changePage={chnagePage}/>*/}\n\t\t\t\t</div>\n\t\t\t)\n\t\t\tbreak;\n\n\t\tcase(pageselection == `user`):\n\t\t\treturn(\n\t\t\t\t<div id=\"mainScreenContainer\">\n\t\t\t\t\t<div>test</div>\n\t\t\t\t\t<Menubar crd={crd} postprop={takePicture} changePage={chnagePage}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\treturn(\n\t\t\t\t<div id=\"mainScreenContainer\">\n\t\t\t\t\t<p>you broke it, what did you do you monster</p>\n\t\t\t\t\t<Menubar crd={crd} postprop={takePicture} changePage={chnagePage}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\tbreak;\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// document.body.style.overflow = \"hidden\"\n\nReactDOM.render(\n\t<div>\n\t\t\t<link \n\t\t\trel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.css\"\n\t\t\tintegrity=\"sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A==\"\n\t\t\tcrossOrigin=\"\"\n\t\t/>\n\t\t<App />\n\t</div>,\n\tdocument.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}